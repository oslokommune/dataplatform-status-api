frameworkVersion: ">=3.34.0 <4.0.0"

service: status-api

provider:
  name: aws
  ecr:
    images:
      okdata-status-api:
        path: ./
        platform: linux/amd64
  region: ${opt:region, 'eu-west-1'}
  endpointType: REGIONAL
  stage: ${opt:stage, 'dev'}
  timeout: 15
  deploymentBucket:
    name: ${self:custom.deploymentBucket.${self:provider.stage}, self:custom.deploymentBucket.dev}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  logRetentionInDays: 90
  tracing:
    lambda: true
    apiGateway: true
  iam:
    role:
      permissionsBoundary: "arn:aws:iam::${aws:accountId}:policy/oslokommune/oslokommune-boundary"
      managedPolicies:
        - 'arn:aws:iam::${aws:accountId}:policy/status-api-policy'
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'
  tags:
    GIT_REV: ${git:branch}:${git:sha1}
  environment:
    GIT_REV: ${git:branch}:${git:sha1}
    STAGE: ${self:provider.stage}
    ENABLE_AUTH: true
    KEYCLOAK_SERVER: ${ssm:/dataplatform/shared/keycloak-server-url}
    KEYCLOAK_REALM: api-catalog
    RESOURCE_SERVER_CLIENT_ID: "okdata-resource-server"
    OKDATA_ENVIRONMENT: ${self:provider.stage}
    OKDATA_CLIENT_ID: status-api
    SERVICE_NAME: ${self:service}

plugins:
  - serverless-better-credentials # must be first
  - serverless-plugin-git-variables
  - serverless-prune-plugin
  - serverless-scriptable-plugin

resources:
  Description: |
    ${self:service} ${git:branch}:${git:sha1}
    ${git:message}

functions:
  get_status: ${file(serverless/functions/get_status.yaml)}
  get_status_from_s3_path: ${file(serverless/functions/get_status_from_s3_path.yaml)}
  update_status: ${file(serverless/functions/update_status.yaml)}
  create_status: ${file(serverless/functions/create_status.yaml)}
  act_on_queue: ${file(serverless/functions/act_on_queue.yaml)}

custom:
  prune:
    automatic: true
    number: 3
  deploymentBucket:
    prod: ok-origo-dataplatform-config-prod
    dev: ok-origo-dataplatform-config-dev
  keycloakArn:
    prod: arn:aws:lambda:${aws:region}:${aws:accountId}:function:keycloak-authorizer-prod-authenticate
    dev: arn:aws:lambda:${aws:region}:${aws:accountId}:function:keycloak-authorizer-dev-authenticate
