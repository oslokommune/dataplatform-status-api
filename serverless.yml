frameworkVersion: ">=1.50.0 <2.0.0"
service: status-api

provider:
  name: aws
  runtime: python3.7
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${self:custom.deploymentBucket.${self:provider.stage}, self:custom.deploymentBucket.dev}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  tracing:
    lambda: true
    apiGateway: true
  layers:
    - ${ssm:/dataplatform/python-base-lambda-layer/arn}
  iamManagedPolicies:
    - Fn::Join:
      - ':'
      - - 'arn:aws:iam:'
        - Ref: AWS::AccountId
        - 'policy/status-api-policy'
    - Fn::Join:
        - ':'
        - - 'arn:aws:iam::aws'
          - 'policy/AWSXRayDaemonWriteAccess'
  tags:
    GIT_REV: ${git:branch}:${git:sha1}
  environment:
    GIT_REV: ${git:branch}:${git:sha1}
    AUTHORIZER_API: ${ssm:/dataplatform/simple-dataset-authorizer/url}
    ENABLE_AUTH: true
    KEYCLOAK_SERVER: ${ssm:/keycloak/client/server}
    KEYCLOAK_REALM: api-catalog

plugins:
  - serverless-aws-documentation
  - serverless-python-requirements
  - serverless-scriptable-plugin
  - serverless-plugin-git-variables
  - serverless-plugin-common-layers
  - serverless-pseudo-parameters
  - serverless-es-logs

resources:
  Description: |
    ${self:service} ${git:branch}:${git:sha1}
    ${git:message}

custom:
  esLogs:
    endpoint: ${ssm:/dataplatform/elasticsearch/endpoint}
    index: dataplatform-services
    filterPattern: '{ $.function_name = "*" }'
  documentation:
    info:
      version: ${git:sha1}
      title: 'Status-api'
      description: 'Status-api for dataplattform'
  deploymentBucket:
    prod: ok-origo-dataplatform-config-prod
    dev: ok-origo-dataplatform-config-dev
  keycloakArn:
    prod: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:keycloak-authorizer-prod-authenticate
    dev: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:keycloak-authorizer-dev-authenticate

functions:
  get_status: ${file(serverless/functions/get_status.yaml)}
  get_status_from_s3_path: ${file(serverless/functions/get_status_from_s3_path.yaml)}
  update_status: ${file(serverless/functions/update_status.yaml)}
  create_status: ${file(serverless/functions/create_status.yaml)}
